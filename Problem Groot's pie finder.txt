//Problem Groot's pie finder


import java.util.*;
public class Test{
    public static List findPies(int[] list,int target){

        Set<List<Integer>> list2=new HashSet<>();
        HashMap<Integer,Integer> map=new HashMap<>();

        for(int i=0;i<list.length;i++){
            if(!map.containsKey(list[i])){
                map.put(list[i],i );
            }
        }
        help_groot(list,target,0,new ArrayList<>(),list2,map);

        List<List> list3=new ArrayList();
        for(List i:list2) {
            list3=i;
            break;
        }

        return list3;
    }
    public static void help_groot(int[] findPies,int sweetness,int i,List<Integer> arr,Set list2,HashMap map){

        if(sum_array(arr)==sweetness){
            List<Integer> temp=new ArrayList<>();
            for(int j:arr){
                temp.add((Integer) map.get(j));
            }
            list2.add(new ArrayList<>(temp));
            return;
        }
        if(i>=findPies.length) {
            return;
        }

        arr.add(findPies[i]);
        help_groot(findPies,sweetness,i+1,arr,list2,map);
        arr.remove(arr.size()-1);
        help_groot(findPies,sweetness,i+1,arr,list2,map);
    }

    public static int sum_array(List<Integer> list){
        int sum=0;
        for(int i:list){
            sum+=i;
        }
        return sum;
    }


    //Start From Here

    public static void main(String[] args){

        int[] list={1, 2, 3, 2, 1};
        int target=6;

        System.out.println(findPies(list,target));

    }
}